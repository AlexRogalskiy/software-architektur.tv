BEGIN:VCALENDAR
PRODID:-//Microsoft Corporation//Outlook 16.0 MIMEDIR//EN
VERSION:2.0
METHOD:PUBLISH
X-MS-OLK-FORCEINSPECTOROPEN:TRUE
BEGIN:VTIMEZONE
TZID:W. Europe Standard Time
BEGIN:STANDARD
DTSTART:16011028T030000
RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10
TZOFFSETFROM:+0200
TZOFFSETTO:+0100
END:STANDARD
BEGIN:DAYLIGHT
DTSTART:16010325T020000
RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=3
TZOFFSETFROM:+0100
TZOFFSETTO:+0200
END:DAYLIGHT
END:VTIMEZONE
BEGIN:VEVENT
CLASS:PUBLIC
CREATED:20210329T160737Z
DESCRIPTION:Spring Native soll die Möglichkeit bieten\, Spring-Boot-Anwend
	ungen ohne größeren Aufwand mit der GraalVM in nativen Code zu kompilier
	en. Das verspricht schnellere Startup-Zeiten - gerade für Umgebungen wie 
	Kubernetes wichtig. Ich habe mein Istio-Microservices-Beispiel darauf umge
	stellt und will einen Blick in die Werkstatt geben: Wie bin ich vorgegange
	n? Was habe ich beobachtet? Das Beispiel und eine kurze Anleitung stehen o
	nline bereit <https://github.com/ewolff/microservice-istio/blob/master/WIE
	-LAUFEN.md#native-images-bauen-und-ausf%C3%BChren> .\n\nhttps://www.youtub
	e.com/watch?v=rjN8DSoxGCo\nhttps://www.twitch.tv/ebrwolff \n
DTEND;TZID="W. Europe Standard Time":20210401T130000
DTSTAMP:20210329T160737Z
DTSTART;TZID="W. Europe Standard Time":20210401T120000
LAST-MODIFIED:20210329T160737Z
LOCATION:https://www.youtube.com/watch?v=rjN8DSoxGCo https://www.twitch.tv
	/ebrwolff
PRIORITY:5
SEQUENCE:0
SUMMARY;LANGUAGE=de:Software Architektur im Stream: GraalVM mit Spring Nati
	ve\, Spring Boot und Spring Cloud
TRANSP:OPAQUE
UID:040000008200E00074C5B7101A82E00800000000D09DCABD8B22D701000000000000000
	01000000000704D01B327D646BE2993C6B67890CE
X-MICROSOFT-CDO-BUSYSTATUS:BUSY
X-MICROSOFT-CDO-IMPORTANCE:1
X-MICROSOFT-DISALLOW-COUNTER:FALSE
X-MS-OLK-AUTOFILLLOCATION:FALSE
X-MS-OLK-AUTOSTARTCHECK:FALSE
X-MS-OLK-CONFTYPE:0
END:VEVENT
END:VCALENDAR
